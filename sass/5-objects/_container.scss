@use "../1-settings/variables";
@import "../2-tools/mixins";


/*Flex container object with centered an aligned modificators*/
.o-flex-container {

    width: 100%;
    @include justify;
    &--centered{
        @include justify-center;
        gap: variables.$spacing;
    }

    &--align-up{
        align-items: start;
    }
}

/*Flex row container object, centered an aligned 
    With flex-wrap modifier*/
.o-row-container {
    display:flex;
    flex-direction: row;
    padding: variables.$spacing-s;
    gap: variables.$spacing-s;
    text-align: center;
    justify-content: center;
    align-items: center;

    &--wrap{
        flex-wrap: wrap;
    }
    
}

/*Flex column container object and aligned 
    With centered modifier*/
.o-column-container {
    width: 100%;
    display: flex;
    flex-direction: column;

    flex-wrap: nowrap;
    align-items: center;
    text-align: left;
    gap: variables.$spacing-s;

    &--centered{
        flex-direction: column;
        text-align: center;
        justify-content: center;
        margin: 1.5rem;
    }
}

/*block container object
    With full-height modifier*/
.o-block-container {
    @include to-block;
    width: 100%;

    &--full-height{
        height: 100%;
    }
}

/*relative container object */
.o-relative-container {
    position: relative;
    width: 100%;
    padding: 0;
    margin: 0;
}

/*absolute container object
    with centered modifier*/
.o-absolute-container {
    position: absolute;
    top: 0;
    left: 0;
    background:none;
    width: 100%;

    &--centered{
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
        align-items: center;
    }
}

/*grid container object with 2/1 column format*/
.o-grid-container {
    display: grid;
    grid-gap: variables.$spacing;
    grid-template-columns: repeat(2, 1fr);
    overflow: hidden;
}

